##lets create two pod and service and see they communicate with each other
804  kubectl run frontend --image=nginx
  805  kubectl run backend --image=nginx
  806  kubectl expose pod frontend --port=80
  807  kubectl expose pod backend --port=80
  808  kubectl get pod,svc
  ###this will not work due to dns resultion issue
  809  kubectl exec frontend -- curl backend pod
  810  kubectl get pod -o wide
  #######frontend the ip is of backend
  811  kubectl exec frontend -- curl 192.168.1.95
  #############################backend put the ip of frontend pod
  
  813  kubectl exec frontend -- curl 192.168.1.97
###lets create the demy policy
 815  vi deny.yml
#########
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny
  namespace: default
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
#############################
  816  kubectl apply -f deny.yml
###check the network policy applied or not
  817  kubectl get networkpolicy
  818  kubectl describe networkpolicy default-deny
####now if you try to ping frontend to backend using the ip it will stop working
  
  821  kubectl get pod -o wide
  822  kubectl exec frontend -- curl 192.168.1.97
  823  kubectl exec backend -- curl 192.168.1.95
#######################lets create and egress rule which means frontend pod can intiate connection to backend everything happen using label
 832  vi frontend.yml
################################
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: frontend
  namespace: default
spec:
  podSelector:
    matchLabels:
      run: frontend
  policyTypes:
  - Egress
  egress:
  - to:
    - podSelector:
        matchLabels:
          run: backend
######################################
  833  kubectl apply -f frontend.yml
  834  kubectl get networkpolicy
  835  kubectl describe networkpolicy frontend
  836  kubectl get pod -o wide
##verify that frontend can send traffic to backend it will not work till we dont create a rule which will allow backend to accept connection
  837  kubectl exec frontend -- curl 192.168.1.97

